---
title: "Leaflet"
author: "Paige Magoto"
format: html
editor: visual
---

Loading packages:

```{r setup, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(ggplot2) 
library(tidyverse)
library(DigitalMethodsData)
library(ggmap)
library(tidygeocoder)
library(leaflet)
library(leaflet.extras)
library(leaftime)
library(leaflet.providers)
library(spatstat)
library(sf)
```

Loading the correct data:

```{r}
locations <- read.csv("locations.final.csv")
entries <- read.csv("entries.final.csv")
people <- read.csv("people3.csv")
SVpolygon <- matrix(c(-90.076779, 29.958558, -90.073984, 29.961689, -90.070555, 29.959363, -90.073466, 29.956301, -90.076779, 29.958558), ncol = 2, byrow = TRUE)
BSVpolygon <- matrix(c(-90.080601, 29.95415, -90.079958, 29.955334, -90.077019, 29.954153, -90.077834, 29.952984, -90.080601, 29.954152), ncol = 2, byrow = TRUE)
```

Creating a base map in leaflet for WSV and BSV:

```{r}
SVbasemap <- leaflet() %>% 
  addProviderTiles("CartoDB.Positron") %>%
  addPolygons(data = SVpolygon, color = "gray3", weight = 2, fillColor = "gray3", fillOpacity = 0.2)
SVbasemap
```

```{r}
leafletBSV <- leaflet() %>% 
  addProviderTiles("CartoDB.Positron") %>% 
  addPolygons(data= BSVpolygon, color = "red", weight = 2, fillColor = "red", fillOpacity = 0.2) %>% 
  addPolygons(data = SVpolygon, color = "gray3", weight = 2, fillColor = "gray3", fillOpacity = 0.2)
leafletBSV
```

```{r}
race.entries.year <- entries %>% 
  filter(!is.na(race.id) & race.id != "") %>%
  group_by(lat, lon, race.id, year) %>% 
  summarise(race.count = n()) %>% 
  group_by(race.id) %>% 
  mutate(scaled_count = scale(race.count)) %>% 
  ungroup()
```

Density map:

```{r}
#this is all the same i do nto rememebr why i made this 
leaflet(race.entries.year) %>%
  addTiles() %>%
  addCircles(
    lng = ~lon, lat = ~lat,
    weight = 1, radius = ~sqrt(race.count) * 10,
    popup = ~paste("Race ID:", race.id, "<br>Count:", race.count),
    color = "gray", fillOpacity = 0.5
  ) 
```

```{r}
library(dplyr)
library(leaflet)
library(leaflet.extras)

pal <- colorFactor(
  palette = c('white', 'grey2', 'purple', 'pink', 'black'),
  domain = race.entries.year$race.id)

SVracemap <- SVbasemap %>% 
  addCircleMarkers(
    data = race.entries.year,
    lng = ~lon, lat = ~lat,
    weight = 1, radius = ~sqrt(race.count) * 3,
    popup = ~paste("Race ID:", race.id, "<br>Count:", race.count, "<br>Year:", year),
     fillColor = ~pal(race.id), 
    group = ~as.character(year)
  ) %>% 
  addLayersControl(
    overlayGroups = unique(as.character(race.entries.year$year)),
    options = layersControlOptions(collapsed = FALSE)
  )
#%>%
#  addLegend(
#  position = "bottomright",
 # title = "Race ID",
  #colors = pal,
  #labels = names(pal),
  #opacity = 1)
SVracemap
```

```{r}
BSVracemap <- leafletBSV %>% 
  addCircleMarkers(
    data = race.entries.year,
    lng = ~lon, lat = ~lat,
    weight = 1, radius = ~sqrt(race.count) * 3,
    popup = ~paste("Race ID:", race.id, "<br>Count:", race.count, "<br>Year:", year),
     fillColor = ~pal(race.id), 
    group = ~as.character(year)
  ) %>% 
  addLayersControl(
    overlayGroups = unique(as.character(race.entries.year$year)),
    options = layersControlOptions(collapsed = FALSE)
  )
BSVracemap
```

Instead, I need to make a workable leaflet, use different makers for each race.id, and make them toggle-able. Just like the years are toggle-able.

```{r}

#create a way to shift through data by year

```

```{r}
#named locations only
named.locations <- locations %>% 
  filter(!is.na(race.id) & race.id != "")
```

filer and change all entries to separate data sets

```{r}
e.1900 <- entries %>% 
  filter(year == 1900)
e.1901 <- entries %>% 
  filter(year == 1901)
e.1903 <- entries %>% 
  filter(year == 1903)
e.1905 <- entries %>% 
  filter(year == 1905)
e.1906 <- entries %>% 
  filter(year == 1906)
e.1907 <- entries %>% 
  filter(year == 1907)
e.1908 <- entries %>% 
  filter(year == 1908)
e.1912 <- entries %>% 
  filter(year == 1912)
e.1915 <- entries %>% 
  filter(year == 1915)
```

```{r}
```
