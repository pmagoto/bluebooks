---
title: "ggplot"
format: html
editor: visual
---

```{r}
register_google(key = Sys.getenv("GOOGLE_KEY"))
register_stadiamaps(key = "STADIA_KEY")
```

## ggplot code from last semester:

```{r}
#| eval: false
#| include: false
geo.race.1900 <- people.1900 %>% #filter in the people.1900 csv file
  group_by(lat,lon,race.id) %>% #group by latitude and longitude to find density of race at each location
    summarise(count.1900 = n()) #count to find find density at a location, by race
geo.race.1915 <- people.1915 %>% #filter in the people.1915 file
  group_by(lat,lon,race.id) %>% #group by latitude and longitude to find density of race at each location
    summarise(count.1915 =n()) #count to find density at a location, by race
geo.race <- full_join(geo.race.1900, geo.race.1915) #join both together to plot together
geo.race.long <- pivot_longer(geo.race, cols = starts_with("count"), names_to = "year", values_to = "count") %>% #ensure that the data is readable for a feceted plot
  arrange(desc(count)) #ensure that the data points with less density appear on top of data points with higher density to read the plot clearly
density.map <- ggmap(staticSV) + geom_polygon(data = lonlatSV, aes(x=longitudeSV, y=latitudeSV),alpha = 0.3, color = "red", fill = "red") + 
  geom_point(data = geo.race.long, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  facet_wrap("year") +
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location, in 1900 and in 1915")
#density.map
#^THIS NEEDS TO BE REWORKED USING THE CORRECT INFOR FROM THE NEW DATASET 



```

```{r}
ggplot.race <- entries %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
#fucntion to do each year

```

```{r}
#thihs is useless, needs ot each be a separate map. 
centerofSV <- c(lon = -90.073891, lat = 29.95905) #creating the static map
staticSV <- get_googlemap(center = centerofSV, zoom = 17, maptype = "satellite", color = "bw")
SVpolygon <- matrix(c(-90.076779, 29.958558, -90.073984, 29.961689, -90.070555, 29.959363, -90.073466, 29.956301, -90.076779, 29.958558), ncol = 2, byrow = TRUE)
density.map <- ggmap(staticSV) +
#+ geom_polygon(data = SVpolygon, aes(x=longitudeSV, y=latitudeSV),alpha = 0.3, color = "red", fill = "red") 
geom_point(data = ggplot.race, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  facet_wrap("year") +
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location")
density.map
```

```{r}
e.1900.density <- entries %>% 
  filter(year == 1900) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1901.density <- entries %>% 
  filter(year == 1901) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1903.density <- entries %>% 
  filter(year == 1903) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1905.density <- entries %>% 
  filter(year == 1905) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1906.density <- entries %>% 
  filter(year == 1906) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1907.density <- entries %>% 
  filter(year == 1907) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1908.density <- entries %>% 
  filter(year == 1908) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1912.density <- entries %>% 
  filter(year == 1912) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1915.density <- entries %>% 
  filter(year == 1915) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
```

```{r}
density.map.1900 <- ggmap(staticSV) +
geom_polygon(data = lonlatSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.3, color = "red", fill = "red") +
geom_point(data = e.1900.density, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location in 1900")
density.map.1900
```

```{r}
density.map.1901 <- ggmap(staticSV) +
geom_polygon(data = lonlatSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.3, color = "red", fill = "red") +
geom_point(data = e.1901.density, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location in 1901")
density.map.1901
```

```{r}
if (is.null(staticSV)) {
  stop("Failed to fetch the map. Check your internet connection or the parameters for get_map.")
}
if (!exists("SVpolygon") || !all(c("longitudeSV", "latitudeSV") %in% colnames(SVpolygon))) {
  stop("SVpolygon data frame is missing or does not have the required columns.")
}
 # Check if ggplot.race data frame exists and has the required columns
if (!exists("ggplot.race") || !all(c("lon", "lat", "count", "race.id", "year") %in% colnames(ggplot.race))) {
  stop("ggplot.race data frame is missing or does not have the required columns.")
}

```

```{r}
#1901, 1906 and 1915
year3scompar<- entries %>% 
  filter(year %in% c(1901, 1906, 1915)) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
density.map.3yrs <- ggmap(staticSV) +
geom_polygon(data = lonlatSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.3, color = "red", fill = "red") +
geom_point(data = year3scompar, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location in 1901, 1906 and 1915") +
  facet_wrap(~year)
density.map.3yrs
```

```{r}
racebarchart <- ggplot(race.by.year, aes(factor(year), count, fill = race.id)) + 
  geom_col(position = "dodge", na.rm = FALSE) + 
  geom_text(aes(label = count), position = position_dodge(width = 0.9), vjust = -0.3, size = 2.5) +
  labs( x = "Year", y = "Number of Workers", title = "Number of Workers by Race in the Blue Books", Fill = "race.id") + 
  theme(plot.title = element_text(hjust = 0.5)) + 
  scale_fill_manual(values = c("white" = "gold3", "colored" = "red", "octoroon" = "darkviolet", "jewish" = "gray"), name = "race.id") 
racebarchart
```

```{r}
#creating the BSV and WSV coordinates and labels
#black storyville coords: using the city ordinance 4118 to create my data.
#bottom left:29.954152,-90.080601
#top left: 29.955334,-90.079958
#top right:29.954153,-90.077019
#bottom right: 29.952984,-90.077834
#center for both 29.956423,-90.07619
longitudeBSV <- c(-90.080601, -90.079958, -90.077019, -90.077834) #longitude for the polygon
latitudeBSV <- c(29.954152,29.955334,29.954153,29.952984) #latitude for the polygon
lonlatBSV <- as.data.frame(cbind(longitudeBSV,latitudeBSV)) #create dataframe for the polygon
#white storyville coords 
#bottom left:29.959378,-90.076034
#top left: 29.961675,-90.073988
#top right:29.959434,-90.070663
#bottom right:29.957063,-90.072809
#center of WSV: 29.958675,-90.073182
longitudeWSV <- c(-90.076034, -90.073988, -90.070663,-90.072809)
latitudeWSV <- c(29.959378, 29.961675,29.959434,29.957063)
lonlatWSV <- as.data.frame(cbind(longitudeWSV,latitudeWSV))
#start creating the static map for this visualization
centerofBSVandWSV <-  c(lon = -90.07619, lat =29.956423) #find the center for a new statis map
BSVandWSVstatic <-  get_map(location = centerofBSVandWSV, zoom = 16, maptype = "satellite", color = "bw") #create static map
BSVlabeled <- ggmap(BSVandWSVstatic) + #load static map at zoom 16
  geom_polygon(data = lonlatBSV, aes(x=longitudeBSV, y=latitudeBSV),alpha = 0.1, color = "gold", fill = "gold") + # add the BSV polygon on top of static map
  annotate("text", x=-90.078700 ,y=29.954400,label="Black Storyville",colour="white",size=5) + #label the black storyville
  geom_polygon(data = lonlatWSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.1, color = "red", fill = "red") + #Add the SV polygon to the static map
  annotate("text", x=-90.073182,y=29.95950,label="White Storyville",colour="white",size=5) +   #label the SV district
  labs(x = "Longitude", y = "Latitude")
BSVlabeled
```

```{r}

```

```{r}
#octoroon and train station 
#bottom left 29.956104,-90.073112
#top left 29.956459,-90.072821
#top right 29.956205,-90.072459
#bottom right 29.955948,-90.072702
#center coords 29.958887,-90.073748
lattrain <- 29.956213
lontrain <- -90.072753
train <- data.frame(lontrain, lattrain)
trainlonlat <- as.data.frame(c(-90.072753, 29.956213), ncol = 2, byrow = TRUE)
center.train <- c(lon = -90.073748, lat = 29.958887 )
longitudetrain <- c(-90.073112, -90.072821, -90.072459, -90.072702) #longitude for the polygon
latitudetrain <- c(29.956104,29.956459,29.956205,29.9562044) #latitude for the polygon
lonlattrain <- as.data.frame(cbind(longitudetrain,latitudetrain))
statictrain <- get_map(location = lonlattrain, zoom = 17, maptype = "satellite", color = "bw")
#create dataframe for the polygon
SVwithTrainStation <- ggmap(statictrain) + #load static map at zoom 16
  geom_polygon(data = lonlatSV, aes(x=longitudeSV, y=latitudeSV),alpha = 0.1, color = "red", fill = "red") + # add the polygon on top of static map
  annotate("text", x=-90.073891,y=29.95905,label="Storyville Vice District",color="white",size=3) + #label the district 
  geom_point(data = train, color="blue",size=10) + 
  annotate("text", x=-90.072763,y=29.956204,label="Southern Railway Terminal",color="white",size=3) + 
  labs(x = "Longitude", y = "Latitude", title = "Train Station Location Compared to Storyville")
SVwithTrainStation


```

```{r}
library(ggmap)
library(ggplot2)

# Coordinates for the train station
lattrain <- 29.956213
lontrain <- -90.072753
train <- data.frame(lontrain, lattrain)

# Coordinates for the polygon
longitudetrain <- c(-90.073112, -90.072821, -90.072459, -90.072702)
latitudetrain <- c(29.956104, 29.956459, 29.956205, 29.9562044)
lonlattrain <- data.frame(longitudetrain, latitudetrain)

# Get the static map
statictrain <- get_map(location = c(lon = mean(longitudetrain), lat = mean(latitudetrain)), zoom = 17, maptype = "satellite", color = "bw")

statictrain <- get_stadiamap(bbox, zoom = 17, maptype = "toner-lite")

# Create dataframe for the polygon
SVwithTrainStation <- ggmap(statictrain) + 
  geom_polygon(data = lonlattrain, aes(x = longitudetrain, y = latitudetrain), alpha = 0.1, color = "red", fill = "red") + 
  annotate("text", x = -90.073891, y = 29.95905, label = "Storyville Vice District", color = "white", size = 3) + 
  geom_point(data = train, aes(x = lontrain, y = lattrain), color = "blue", size = 10) + 
  annotate("text", x = -90.072763, y = 29.956204, label = "Southern Railway Terminal", color = "white", size = 3) + 
  labs(x = "Longitude", y = "Latitude", title = "Train Station Location Compared to Storyville")

SVwithTrainStation
```

```{r}
#chapter two map for octroon and railway station
centerofSV <- c(lon = -90.073891, lat = 29.95905) #creating the static map
SVbox <- make_bbox(lon = centerofSV["lon"], lat = centerofSV["lat"], f = 0.1)
staticSV <- get_stadiamap(maptype = "stamen_toner", bbox = SVbox, zoom = 17)
```
