---
title: "ggplot"
format: html
editor: visual
---

## ggplot code from last semester:

```{r}
#| eval: false
#| include: false
geo.race.1900 <- people.1900 %>% #filter in the people.1900 csv file
  group_by(lat,lon,race.id) %>% #group by latitude and longitude to find density of race at each location
    summarise(count.1900 = n()) #count to find find density at a location, by race
geo.race.1915 <- people.1915 %>% #filter in the people.1915 file
  group_by(lat,lon,race.id) %>% #group by latitude and longitude to find density of race at each location
    summarise(count.1915 =n()) #count to find density at a location, by race
geo.race <- full_join(geo.race.1900, geo.race.1915) #join both together to plot together
geo.race.long <- pivot_longer(geo.race, cols = starts_with("count"), names_to = "year", values_to = "count") %>% #ensure that the data is readable for a feceted plot
  arrange(desc(count)) #ensure that the data points with less density appear on top of data points with higher density to read the plot clearly
density.map <- ggmap(staticSV) + geom_polygon(data = lonlatSV, aes(x=longitudeSV, y=latitudeSV),alpha = 0.3, color = "red", fill = "red") + 
  geom_point(data = geo.race.long, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  facet_wrap("year") +
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location, in 1900 and in 1915")
#density.map
#^THIS NEEDS TO BE REWORKED USING THE CORRECT INFOR FROM THE NEW DATASET 



```

```{r}
ggplot.race <- entries %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
#fucntion to do each year

```

```{r}
#thihs is useless, needs ot each be a separate map. 
centerofSV <- c(lon = -90.073891, lat = 29.95905) #creating the static map
staticSV <- get_map(location = centerofSV, zoom = 17, maptype = "satellite", color = "bw")
SVpolygon <- matrix(c(-90.076779, 29.958558, -90.073984, 29.961689, -90.070555, 29.959363, -90.073466, 29.956301, -90.076779, 29.958558), ncol = 2, byrow = TRUE)
density.map <- ggmap(staticSV) +
#+ geom_polygon(data = SVpolygon, aes(x=longitudeSV, y=latitudeSV),alpha = 0.3, color = "red", fill = "red") 
geom_point(data = ggplot.race, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  facet_wrap("year") +
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location")
density.map
```

```{r}
e.1900.density <- entries %>% 
  filter(year == 1900) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1901.density <- entries %>% 
  filter(year == 1901) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1903.density <- entries %>% 
  filter(year == 1903) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1905.density <- entries %>% 
  filter(year == 1905) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
e.1906.density <- entries %>% 
  filter(year == 1906) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1907.density <- entries %>% 
  filter(year == 1907) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1908.density <- entries %>% 
  filter(year == 1908) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1912.density <- entries %>% 
  filter(year == 1912) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
e.1915.density <- entries %>% 
  filter(year == 1915) %>% 
  group_by(lat, lon, race.id,year) %>% 
  filter(!is.na(race.id) & race.id != "") %>% 
  summarise(count = n()) %>% 
   arrange(desc(count))
```

```{r}
density.map.1900 <- ggmap(staticSV) +
geom_polygon(data = lonlatSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.3, color = "red", fill = "red") +
geom_point(data = e.1900.density, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location in 1900")
density.map.1900
```

```{r}
density.map.1901 <- ggmap(staticSV) +
geom_polygon(data = lonlatSV, aes(x=longitudeWSV, y=latitudeWSV),alpha = 0.3, color = "red", fill = "red") +
geom_point(data = e.1901.density, mapping = aes(x=lon, y=lat, size=count, color=race.id)) +
  scale_color_manual(values = c("white" = "white","colored"="gray27","octoroon"="gold","NA"= "transparent", "jewish" = "darkslateblue")) + 
  labs(x = "Longitude", y = "Latitude", title = "The Density of Races in the Blue Books, by location in 1901")
density.map.1901
```

```{r}
if (is.null(staticSV)) {
  stop("Failed to fetch the map. Check your internet connection or the parameters for get_map.")
}
if (!exists("SVpolygon") || !all(c("longitudeSV", "latitudeSV") %in% colnames(SVpolygon))) {
  stop("SVpolygon data frame is missing or does not have the required columns.")
}
 # Check if ggplot.race data frame exists and has the required columns
if (!exists("ggplot.race") || !all(c("lon", "lat", "count", "race.id", "year") %in% colnames(ggplot.race))) {
  stop("ggplot.race data frame is missing or does not have the required columns.")
}

```

```{r}
racebarchart <- ggplot(race.by.year, aes(factor(year), count, fill = race.id)) + 
  geom_col(position = "dodge", na.rm = FALSE) + 
  geom_text(aes(label = count), position = position_dodge(width = 0.9), vjust = -0.3, size = 2.5) +
  labs( x = "Year", y = "Number of Workers", title = "Number of Workers by Race in the Blue Books", Fill = "race.id") + 
  theme(plot.title = element_text(hjust = 0.5)) + 
  scale_fill_manual(values = c("white" = "gold3", "colored" = "red", "octoroon" = "darkviolet", "jewish" = "gray"), name = "race.id") 
racebarchart
```
